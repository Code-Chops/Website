@inherits LayoutComponentBase

@if (ChildContent is not null)
{
	<span id="crossfade-main">
		<div id="crossfade-source" style="z-index: @(IsInTransition ? 0 : 1);">
			<span id="crossfade-container">
				@ChildContent
			</span>
		</div>
		<div id="crossfade-copy">
			@ElementCopy
		</div>
	</span>
}
	
<style>
	#crossfade-copy {
		transition: opacity @(AnimationDurationInMilliseconds)ms linear;
		opacity: @(IsInTransition ? 0 : 1);
		z-index: @(IsInTransition ? 101 : 0);
		visibility: @(IsInTransition ? "visible" : "hidden")
	}	
</style>

@code {
	[Inject] public IJSRuntime JsRuntime { get; set; } = null!;
	private IJSObjectReference JsObject { get; set; } = null!;
	[Parameter] public RenderFragment? ChildContent { get; set; }
	[Parameter] public MarkupString ElementCopy { get; set; }
	private bool IsInTransition { get; set; }
	[Parameter] public int AnimationDurationInMilliseconds { get; set; } = 350;
	[Parameter] public bool Prerender { get; set; }
	[Inject] public NavigationManager NavigationManager { get; set; } = null!;
	[Inject] public RenderLocation RenderLocation { get; set; } = null!;

	protected override void OnInitialized()
	{
		if (RenderLocation is RenderedOnClient)
			JsObject = ((IJSInProcessRuntime)JsRuntime).Invoke<IJSObjectReference>("import", "./_content/CodeChops.Website.RazorComponents/Crossfade.razor.js");
	}

	public async Task ExecuteAsync()
	{
		IsInTransition = true;

		if (!Prerender)
		{
			await LoadCrossfadeStateAsync();
			StateHasChanged();
		}
		
		await Task.Delay(AnimationDurationInMilliseconds).ContinueWith(_ =>
		{
			IsInTransition = false;
			ElementCopy = new(null!);
			StateHasChanged();
		});
	}
	
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (Prerender) 
			await Task.Delay(500).ContinueWith(_ => LoadCrossfadeStateAsync());
	}
	
	private async Task LoadCrossfadeStateAsync()
	{
		if (ElementCopy.Value is not null) return;
		
		ElementCopy = (MarkupString)await ((IJSInProcessRuntime)JsRuntime).InvokeAsync<string>("copyElement", "crossfade-source", "crossfade-copy", Prerender);

		StateHasChanged();
	}
}