@using static CodeChops.Website.RazorComponents.Navigation.MenuButton

<div class="top-bar">
    <div class="menu-bar navbar navbar-dark">
        <div class="brand noSelect">
            @if (LogoPath is not null)
            {
                <img src=@LogoPath class="logo" alt="Logo @Title" style=@If(!ShowLogo,"opacity:0;")>
            }

            @if (ShowTitle)
            {
                <div class="navbar-brand" id="title">@Title</div>
            }
        </div>

        <div class="button-container">
            <div class="navbar-buttons">
                @foreach(var button in Buttons)
                {
                    <MenuButton Data=button OnClick=@OnClickButton></MenuButton>
                }
            </div>
            @ChildContent

            <button class="navbar-toggler" @onclick="Toggle">
                <span class="@(CustomToggleImage is not null ? "custom-toggler-icon" : "fa fa-bars")"></span>
            </button>
        </div>
    </div>

    <div class="top-bar-shadow @(IsCollapsed ? "hide" : "show")">
        <div class="menu-item-container">
            @foreach(var button in Buttons)
            {
                <MenuButton Data=button OnClick=@OnClickButton></MenuButton>
            }
        </div>
    </div>
</div>


@code {
    [Parameter] public string Title { get; set; } = null!;
    [Parameter] public Color BackgroundColor { get; set; }
    [Parameter] public Color AccentColor { get; set; }
    [Parameter] public Color TextColor { get; set; }
    [Parameter] public Color HRefColor { get; set; }
    [Parameter] public string FontFamily { get; set; } = null!;
    [Parameter] public string CustomToggleImage { get; set; } = null!;
    [Parameter] public string LogoPath { get; set; } = null!;
    [Parameter] public int Height { get; set; } = 80;
    [Parameter] public bool ShowLogo { get; set; } = true;
    [Parameter] public bool ShowTitle { get; set; } = true;
    [Parameter] public ICollection<MenuButtonData> Buttons { get; set; } = new List<MenuButtonData>();
    [Parameter] public int CollapseWidth { get; set; } = 600;
    [Parameter] public RenderFragment ChildContent { get; set; } = null!;

    private bool IsCollapsed { get; set; } = true;

    private void Toggle()
    {
        this.IsCollapsed = !this.IsCollapsed;
        this.StateHasChanged();
    }

    public void Collapse()
    {
        if (!this.IsCollapsed) this.Toggle();
    }

    public void OnClickButton(EventArgs e)
    {
        this.Collapse();
    }

    public void Refresh()
    {
        this.StateHasChanged();
    }
}

<style>
    :root{
        --backgroundcolor:  @BackgroundColor;
        --accentcolor:      @AccentColor;
        --textcolor:        @TextColor;
        --hrefcolor:        @HRefColor;

        --backgroundcolor-rgb:  @BackgroundColor.Rgb;
        --accentcolor-rgb:      @AccentColor.Rgb;
        --textcolor-rgb:        @TextColor.Rgb;
        --hrefcolor-rgb:        @HRefColor.Rgb;
    }

    .navbar-brand {
        @(this.FontFamily != null ? $"font-family: {this.FontFamily};" : null)
    }

    .custom-toggler-icon {
        @(this.CustomToggleImage != null ? $"background-image: url({this.CustomToggleImage});" : null)
    }

    .menu-bar {
        height: @(this.Height)px;
    }

    @@media (min-width: @(CollapseWidth)px) {
        .navbar-toggler, .top-bar-shadow {
            display: none;
        }

        .menu-setting {
            padding-top: 3px;
        }
    }

    @@media (max-width: @(CollapseWidth-1)px) {
        .navbar-buttons {
            display: none !important;
        }
    }
</style>