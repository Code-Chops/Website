@using CodeChops.Website.Client.Resources
<Splash>
    @*    <CascadingAuthenticationState>
*@        <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            @*                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                    <NotAuthorized>
                        @if (context.User.Identity?.IsAuthenticated != true)
                        {
                            <RedirectToLogin />
                        }
                        else
                        {
                            <p role="alert">You are not authorized to access this resource.</p>
                        }
                    </NotAuthorized>
                </AuthorizeRouteView>
*@              <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <Content>
                    <Box>
                        <Title Value="@Resource.PageNotFound" AlternativeHeader="@Resource.PageNotFound" />
                        <p>
                            @Resource.PageNotFound
                        </p>
                    </Box>
                </Content>
            </LayoutView>
        </NotFound>
    </Router>
    @*    </CascadingAuthenticationState>
*@</Splash>

@code {

    public IGeneralResource Resource { get; set; } = IGeneralResource.Get();
}