@inherits ResourcedComponent
@using System.Globalization
@using System.Collections.Immutable;
@using CodeChops.Website.RazorComponents.Navigation.Menu

@if (FlagsByLanguageCode.Any())
{
	<span class="menu-setting small-screen-hide" @onkeydown="@(async e => await ChangeLanguageAsync(e))">
		<MenuButton Data="@MenuButtonData">@CurrentLanguageFlag</MenuButton>
	</span>
}

@code {
	[Inject] private IJSRuntime JsRuntime { get; set; } = null!;
	[Inject] private NavigationManager UriHelper { get; set; } = null!;
	
	/// <summary>
	/// The first culture is the default culture.
	/// </summary>
	public static IReadOnlyDictionary<string, string> FlagsByLanguageCode { get; } = new Dictionary<string, string>(StringComparer.OrdinalIgnoreCase) 
	{ 
		["EN"] = "🇬🇧", ["NL"] = "🇳🇱"
	};
	public static ImmutableList<string> SupportedLanguages { get; } = FlagsByLanguageCode.Keys.ToImmutableList();
	public string CurrentLanguageFlag { get; set; } = null!;

	private MenuButtonData MenuButtonData { get; set; }
	
	protected override void OnComponentInitialized()
	{
		MenuButtonData = new() { OnClick = (e, _) => ChangeLanguageAsync(e) };
		SetLanguageFlag();
	}

	private async Task ChangeLanguageAsync(EventArgs? e)
	{
		if (e is KeyboardEventArgs { Code: not "Enter" and not "NumpadEnter" }) return;

		var index = SupportedLanguages.IndexOf(LanguageCache.CurrentLanguageCode);
		var newIndex = (index + 1) % SupportedLanguages.Count;
		var newLanguageCode = SupportedLanguages[newIndex];

		LanguageCache.SetNewLanguage(newLanguageCode);
		SetLanguageFlag();

		TriggerLanguageChangedEvent();
		
		await JsRuntime.InvokeVoidAsync("blazorCulture.set", newLanguageCode);
	}

	private void SetLanguageFlag()
	{
		if (!FlagsByLanguageCode.TryGetValue(LanguageCache.CurrentLanguageCode, out var flag)) return;

		CurrentLanguageFlag = flag;
		StateHasChanged();
	}
}