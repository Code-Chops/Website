<button class="menu-setting small-screen-hide" @onkeydown="@ChangeMode">
	<MenuButton OnClick=@ChangeMode Data=MenuButtonData></MenuButton>
</button>

@code {
	[Inject] public IJSRuntime JsRuntime { get; set; } = null!;

	internal static event Action ChangedEvent = null!;

	internal static ColorMode ColorMode { get; set; } = null!;
	private MenuButtonData MenuButtonData { get; set; } = null!;

	protected override void OnInitialized()
	{
		this.SetMenuButtonData();
	}

	private void SetMenuButtonData()
	{
		this.MenuButtonData = new MenuButtonData()
		{
			FontAwesomeIcon = ColorMode is DarkMode ? "fa-moon" : "fa-sun"
		};
	}

	private void ChangeMode(EventArgs? e)
	{
		if (e is KeyboardEventArgs keyEventArgs && (keyEventArgs.Code is "Enter" or "NumpadEnter")) return;

		ColorMode mode = ColorMode is DarkMode ? LightMode.Instance : DarkMode.Instance;
		SetMode(mode);	
		this.SetMenuButtonData();

		ChangedEvent?.Invoke();

		if (this.JsRuntime is not IJSInProcessRuntime inProcessRuntime) return;
		inProcessRuntime.InvokeVoid("blazorColorMode.set", ColorMode is DarkMode ? nameof(DarkMode) : nameof(LightMode));
	}

	internal static void SetMode(ColorMode mode)
	{
		ColorMode = mode;
	}
}