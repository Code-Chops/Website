@using System.Globalization
@inherits LayoutComponentBase
@using static CodeChops.Website.RazorComponents.Navigation.MenuButton

<div class="page">
    <MenuBar @ref=MenuBar
            BackgroundColor=@(IsDarkMode ? new(ColorName.Black) : Color.White)
            AccentColor=@Branding.Colors.Accent
            TextColor=@Branding.Colors.Accent.ChangeBrightness(IsDarkMode ? 200 : -60)
            HRefColor=@Branding.Colors.Accent.ChangeBrightness(IsDarkMode ? 40 : -40)
            FontFamily=@Branding.FontFamily 
            LogoPath="/favicon.ico" 
            Title=@Branding.Name 
            ShowTitle=ShowTitle
            Height="80" 
            ShowLogo="false"
            Buttons=Buttons>
        
            <ColorModeSelector />
            <LanguageSelector />
    </MenuBar>

    <div class="border"></div>

    <main>
        @Body    
        
        <Footer/>
    </main>

</div>

<style>
    :root {
        --branding-color-main:              @Branding.Colors.Main;
        --branding-color-accent:            @Branding.Colors.Accent;
        --branding-color-background:        @Branding.Colors.Background;
        
        --branding-color-main-rgb:          @Branding.Colors.Main.Rgb;
        --branding-color-accent-rgb:        @Branding.Colors.Accent.Rgb;
        --branding-color-background-rgb:    @Branding.Colors.Background.Rgb;
    }

    ::selection {
        background: @(ColorModeSelector.ColorMode == ColorMode.LightMode ? Branding.Colors.Accent.ChangeBrightness(140) : "var(--branding-color-accent)");
    }
</style>

@code
{
    [CascadingParameter] protected bool ShowTitle { get; set; } = true;
    internal static ColorMode ColorMode { get; set; } = null!;
    private MenuBar MenuBar { get; set; } = null!;
    private ICollection<MenuButtonData> Buttons { get; set; } = null!;
    private bool IsDarkMode => ColorModeSelector.ColorMode == ColorMode.DarkMode;

    protected override void OnInitialized()
    {
        OnLanguageChanged();
        LanguageSelector.ChangedEvent += this.OnLanguageChanged;
        ColorModeSelector.ChangedEvent += this.StateHasChanged;
    }

    private void OnLanguageChanged()
    {
        this.Buttons = new MenuButtonData[]
            {
                new() { HRef="/",           Text=Pages.Home.HomeResource.Title },
                new() { HRef="/projects",   Text=Pages.Projects.Resources.ProjectsResource.Title },
                new() { HRef="/about",      Text=Pages.About.AboutResource.Title },
            };
        this.StateHasChanged();
    }
}